[ClassVersion("1.0.0.0")]
class MSFT_AADTenantAppManagementPolicyRestrictionsCredential
{
    [Write, Description("String value that indicates the maximum lifetime for password expiration, defined as an ISO 8601 duration. For example, P4DT12H30M5S represents four days, 12 hours, 30 minutes, and five seconds. This property is required when restrictionType is set to passwordLifetime.")] string MaxLifetime;
    [Write, Description("Specifies the date from which the policy restriction applies to newly created applications. For existing applications, the enforcement date can be retroactively applied.")] string RestrictForAppsCreatedAfterDateTime;
    [Write, Description("The type of restriction being applied. The possible values are: passwordAddition, passwordLifetime, symmetricKeyAddition, symmetricKeyLifetime, customPasswordAddition, and unknownFutureValue. Each value of restrictionType can be used only once per policy.")] string RestrictionType;
    [Write, Description("Indicates whether the restriction is evaluated. The possible values are: enabled, disabled, unknownFutureValue. If enabled, the restriction is evaluated. If disabled, the restriction isn't evaluated or enforced.")] string State;
};

[ClassVersion("1.0.0.0")]
class MSFT_AADTenantAppManagementPolicyRestrictions
{
    [Write, Description("Collection of keyCredential restrictions settings to be applied to an application or service principal."), EmbeddedInstance("MSFT_AADTenantAppManagementPolicyRestrictionsCredential")] string KeyCredentials[];
    [Write, Description("Collection of password restrictions settings to be applied to an application or service principal."), EmbeddedInstance("MSFT_AADTenantAppManagementPolicyRestrictionsCredential")] string PasswordCredentials[];
};
[ClassVersion("1.0.0.0"), FriendlyName("AADTenantAppManagementPolicy")]
class MSFT_AADTenantAppManagementPolicy : OMI_BaseResource
{
    [Key, Description("The display name of the policy.")] String DisplayName;
    [Write, Description("The description of the policy.")] String Description;
    [Write, Description("Denotes whether the policy is enabled.")] Boolean IsEnabled;
    [Write, Description("Restrictions that apply to an application  object."), EmbeddedInstance("MSFT_AADTenantAppManagementPolicyRestrictions")] string ApplicationRestrictions;
    [Write, Description("Restrictions that apply to a service principal  object."), EmbeddedInstance("MSFT_AADTenantAppManagementPolicyRestrictions")] string ServicePrincipalRestrictions;

    [Write, Description("Present ensures the instance exists, absent ensures it is removed."), ValueMap{"Absent","Present"}, Values{"Absent","Present"}] string Ensure;
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
