[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0")]
class MSFT_IntuneAppConfigurationPolicyCustomSetting
{
    [Write, Description("Name of the custom setting.")] String name;
    [Write, Description("Value of the custom setting.")] String value;
};
[ClassVersion("1.0.0"), FriendlyName("MSFT_managedMobileApp")]
class MSFT_managedMobileApp
{
    [Write, Description("Key of the entity.")] String id;
    [Write, Description("Version of the entity.")] String version;
    [Write, Description("The identifier for an app with it's operating system type."), EmbeddedInstance("MSFT_AppIdentifier")] String mobileAppIdentifier[];
};

[ClassVersion("1.0.0"), FriendlyName("MSFT_AppIdentifier")]
class MSFT_AppIdentifier
{
    [Write, Description("AppId iOS.")] String bundleID;
    [Write, Description("AppId Android.")] String packageID;
    [Write, Description("AppId Windows.")] String windowsAppId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneAppConfigurationPolicy")]
class MSFT_IntuneAppConfigurationPolicy : OMI_BaseResource
{
    [Write, Description("Key of the entity. Read-Only.")] String Id;
    [Key, Description("Display name of the app configuration policy.")] String DisplayName;
    [Write, Description("Description of the app configuration policy.")] String Description;
    [Write, Description("Assignments of the Intune Policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Custom settings for the app cnfiguration policy."),EmbeddedInstance("MSFT_IntuneAppConfigurationPolicyCustomSetting")] String CustomSettings[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
    [Write, Description("List of Scope Tags for this Entity instance.")] String roleScopeTagIds[];
    [Write, Description("Count of apps to which the current policy is deployed.")] Uint32 deployedAppCount;
    [Write, Description("Indicates if the policy is deployed to any inclusion groups or not.")] Boolean isAssigned;
    [Write, Description("The intended app management levels for this policy."), ValueMap{"unspecified","unmanaged","mdm","androidEnterprise","androidEnterpriseDedicatedDevicesWithAzureAdSharedMode","androidOpenSourceProjectUserAssociated","androidOpenSourceProjectUserless","unknownFutureValue"}, Values{"unspecified","unmanaged","mdm","androidEnterprise","androidEnterpriseDedicatedDevicesWithAzureAdSharedMode","androidOpenSourceProjectUserAssociated","androidOpenSourceProjectUserless","unknownFutureValue"}] String targetedAppManagementLevels;
    [Write, Description("Public Apps selection: group or individual."), ValueMap{"selectedPublicApps","allCoreMicrosoftApps","allMicrosoftApps","allApps"}, Values{"selectedPublicApps","allCoreMicrosoftApps","allMicrosoftApps","allApps"}] String appGroupType;
    [Write, Description("List of apps to which the policy is deployed."), EmbeddedInstance("MSFT_managedMobileApp")] String Apps[];
};